
Each entry in a file system, whether it be a 
regular file, directory, link, or something else,
is represented by a generic fs_node_t. This generic
interface provides a way to interact with the underlying
object in an abstract way. In this way, the fs_node_t acts
as an interface between non-filesystem code and filesystem
code.

Most file system will require other data being kept. This sort
of information should be hidden from calling processes. Here is
a general example of the abstraction using the initrd.


           Main kernel
               |
    fs_node_t representing initrd
               |
      Initrd code:
          Start point is kept in some variable
          Number of files is kept in a strucute


